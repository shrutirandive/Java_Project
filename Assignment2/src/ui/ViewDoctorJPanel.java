/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static model.CommunityAdmin.communityDirectory;
import model.Doctor;
import static model.HospitalAdmin.hospitalDirectory;
import model.Person;

/**
 *
 * @author user
 */
public class ViewDoctorJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewDoctorJPanel
     */
    Person person = new Person();
    Doctor doc = new Doctor();
    public ViewDoctorJPanel() {
        initComponents();
        
        populateTable();
        populateTableCommunity();
        populateTableHosp();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        lblHouse = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        comboGender = new javax.swing.JComboBox<>();
        lblPhysicianType = new javax.swing.JLabel();
        txtPhysicianType = new javax.swing.JTextField();
        txtHouse = new javax.swing.JTextField();
        lblHospitalName = new javax.swing.JLabel();
        comboBoxCommunity = new javax.swing.JComboBox<>();
        comboBoxHospName = new javax.swing.JComboBox<>();
        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDoctor = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblName.setFont(new java.awt.Font("Centaur", 0, 14)); // NOI18N
        lblName.setForeground(new java.awt.Color(51, 51, 255));
        lblName.setText("NAME");

        txtName.setFont(new java.awt.Font("Centaur", 0, 14)); // NOI18N
        txtName.setForeground(new java.awt.Color(51, 51, 255));

        lblGender.setFont(new java.awt.Font("Centaur", 0, 14)); // NOI18N
        lblGender.setForeground(new java.awt.Color(51, 51, 255));
        lblGender.setText("GENDER");

        lblHouse.setFont(new java.awt.Font("Centaur", 0, 14)); // NOI18N
        lblHouse.setForeground(new java.awt.Color(51, 51, 255));
        lblHouse.setText("HOUSE");

        lblCommunity.setFont(new java.awt.Font("Centaur", 0, 14)); // NOI18N
        lblCommunity.setForeground(new java.awt.Color(51, 51, 255));
        lblCommunity.setText("COMMUNITY");

        btnUpdate.setBackground(new java.awt.Color(155, 211, 248));
        btnUpdate.setFont(new java.awt.Font("Centaur", 0, 14)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit-icon.png"))); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(155, 211, 248));
        btnDelete.setFont(new java.awt.Font("Centaur", 0, 14)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Close-2-icon.png"))); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        comboGender.setFont(new java.awt.Font("Centaur", 0, 14)); // NOI18N
        comboGender.setForeground(new java.awt.Color(51, 51, 255));
        comboGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Female", "Male" }));

        lblPhysicianType.setFont(new java.awt.Font("Centaur", 0, 14)); // NOI18N
        lblPhysicianType.setForeground(new java.awt.Color(51, 51, 255));
        lblPhysicianType.setText("PHYSICIAN TYPE");

        txtPhysicianType.setFont(new java.awt.Font("Centaur", 0, 14)); // NOI18N
        txtPhysicianType.setForeground(new java.awt.Color(51, 51, 255));

        txtHouse.setFont(new java.awt.Font("Centaur", 0, 14)); // NOI18N
        txtHouse.setForeground(new java.awt.Color(51, 51, 255));

        lblHospitalName.setFont(new java.awt.Font("Centaur", 0, 14)); // NOI18N
        lblHospitalName.setForeground(new java.awt.Color(51, 51, 255));
        lblHospitalName.setText("HOSPITAL NAME");

        comboBoxCommunity.setFont(new java.awt.Font("Centaur", 0, 14)); // NOI18N
        comboBoxCommunity.setForeground(new java.awt.Color(51, 51, 255));
        comboBoxCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        comboBoxHospName.setFont(new java.awt.Font("Centaur", 0, 14)); // NOI18N
        comboBoxHospName.setForeground(new java.awt.Color(51, 51, 255));
        comboBoxHospName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGender)
                    .addComponent(lblCommunity)
                    .addComponent(lblHouse)
                    .addComponent(lblPhysicianType)
                    .addComponent(lblHospitalName))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(comboBoxHospName, 0, 106, Short.MAX_VALUE)
                        .addGap(756, 756, 756))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboGender, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtPhysicianType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(124, 124, 124)
                                .addComponent(btnUpdate)
                                .addGap(44, 44, 44)
                                .addComponent(btnDelete))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(comboBoxCommunity, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtHouse, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {comboGender, txtHouse, txtName, txtPhysicianType});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(comboGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGender))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhysicianType)
                    .addComponent(txtPhysicianType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHouse)
                    .addComponent(txtHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCommunity)
                    .addComponent(comboBoxCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxHospName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHospitalName)))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {comboGender, txtHouse, txtName, txtPhysicianType});

        lblTitle.setFont(new java.awt.Font("Centaur", 0, 24)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(51, 51, 255));
        lblTitle.setText("Doctors");

        tblDoctor.setFont(new java.awt.Font("Centaur", 0, 14)); // NOI18N
        tblDoctor.setForeground(new java.awt.Color(51, 51, 255));
        tblDoctor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Gender", "PhysicianType", "House", "Community", "HospitalName"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDoctor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDoctorMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDoctor);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(221, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblDoctorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDoctorMouseClicked
        // TODO add your handling code here:
        int selectedRowIndex = tblDoctor.getSelectedRow();
        if (selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to update");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblDoctor.getModel();

        Doctor selectedDoctor = (Doctor) model.getValueAt(selectedRowIndex, 0);
        System.out.println(selectedDoctor);

        txtName.setText(selectedDoctor.getName());
        comboGender.setSelectedItem(selectedDoctor.getGender());
        txtPhysicianType.setText(selectedDoctor.getPhysicianType());
        txtHouse.setText(selectedDoctor.getHouse());
        comboBoxCommunity.setSelectedItem(selectedDoctor.getCommunity());
        comboBoxHospName.setSelectedItem(selectedDoctor.getHospitalName());
        
    }//GEN-LAST:event_tblDoctorMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblDoctor.getModel();
        int selectedRowIndex = tblDoctor.getSelectedRow();

        if (tblDoctor.getSelectedRowCount()==1){
            //-- if single row is selected than update--
            String name = txtName.getText();
            String gender = (String) comboGender.getSelectedItem();
            String physicianType = txtPhysicianType.getText();
            String house = txtHouse.getText();
            String hospitalName = (String) comboBoxHospName.getSelectedItem();
            String community = (String) comboBoxCommunity.getSelectedItem();
            
            if (name.equals("") || gender.equals("") || physicianType.equals("")|| 
                    house.equals("") || community.equals("") || hospitalName.equals("")){
            JOptionPane.showMessageDialog(null, "Please enter all the fields");
            return;   
        }
            Doctor updateDoc = new Doctor();            
            //-- set updated value on the table row
            updateDoc.setName(name);
            updateDoc.setGender(gender);
            updateDoc.setPhysicianType(physicianType);
            updateDoc.setHouse(house);
            updateDoc.setHospitalName(hospitalName);
            updateDoc.setCommunity(community);
            
            doc.updateDoctor(updateDoc,selectedRowIndex);
            
            //UPDATE DOCTOR DATA IN PERSON DIRECTORY
            Person updatePerson = new Person();

            //-- set updated value on the table row
            updatePerson.setName(name);
            updatePerson.setGender(gender);
            updatePerson.setPhysicianType(physicianType);
            updatePerson.setHouse(house);
            updatePerson.setHospitalName(hospitalName);
            updatePerson.setCommunity(community);
            person.updatePerson(person, selectedRowIndex);
            
            communityDirectory.set(selectedRowIndex,community);
            populateTable();

            JOptionPane.showMessageDialog(this, "Doctor Updated Successfully ");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblDoctor.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this,"please select a row");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblDoctor.getModel();
        //DELETE DOCTOR DATA IN DOCTOR DIRECTORY
        Doctor selectedDoctor = (Doctor) model.getValueAt(selectedRowIndex, 0);
        doc.deleteDoctor(selectedDoctor);
        
        communityDirectory.remove(selectedDoctor.getCommunity());
        
        //DELETE DOCTOR DATA IN PERSON DIRECTORY
        Person selectedPerson = (Person) model.getValueAt(selectedRowIndex, 0);
        person.deletePerson(selectedPerson);
        
        JOptionPane.showMessageDialog(this,"Doctor Deleted");

        populateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> comboBoxCommunity;
    private javax.swing.JComboBox<String> comboBoxHospName;
    private javax.swing.JComboBox<String> comboGender;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHospitalName;
    private javax.swing.JLabel lblHouse;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPhysicianType;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblDoctor;
    private javax.swing.JTextField txtHouse;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhysicianType;
    // End of variables declaration//GEN-END:variables
    
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblDoctor.getModel();
        model.setRowCount(0);
        
        for(Doctor doc: Doctor.getDoctorDirectory()){
            Object[] row = new Object[6];
            row[0] = doc;
            row[1] = doc.getGender();
            row[2] = doc.getPhysicianType();
            row[3] = doc.getHouse();
            row[4] = doc.getCommunity();
            row[5] = doc.getHospitalName();
            model.addRow(row);
        }
        
    }
private void populateTableCommunity() {
        
         comboBoxCommunity.setModel(new DefaultComboBoxModel<String>(communityDirectory.toArray(new String[0])));

    }
private void populateTableHosp() {
        
         comboBoxHospName.setModel(new DefaultComboBoxModel<String>(hospitalDirectory.toArray(new String[0])));

    }

}
